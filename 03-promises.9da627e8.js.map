{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SA0BpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAe,CAAEL,WAAUC,SAEjC,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLP,EACFK,EAAQF,GAGRG,EAAOH,E,GAERJ,E,IApCPL,EAAKc,iBAAiB,UAGtB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAMC,EAASC,OAAOlB,EAAKiB,OAAOE,OAC9BC,EAAQF,OAAOlB,EAAKK,MAAMc,OACvBE,EAAOH,OAAOlB,EAAKqB,KAAKF,OAEtBG,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAAG,CAGnCnB,EAFiBmB,EAEOF,GACrBG,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBP,EAAA2B,OAAOC,QAAQ,qBAAoCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE1DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBP,EAAA2B,OAAOI,QAAQ,oBAAmCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE5De,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm); \n\n \nfunction onSubmitForm(event) {\n  event.preventDefault();\n  \n  const amount = Number(form.amount.value);\n  let delay = Number(form.delay.value);\n  const  step = Number(form.step.value);\n \n  for (let i = 1; i <= amount; i += 1) {\n    const position = i; \n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step; \n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promiseValue = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(promiseValue);\n      }\n      else {\n        reject(promiseValue);\n      }\n    }, delay)\n  });\n}\n  \n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promiseValue","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","amount","Number","value","delay1","step","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.9da627e8.js.map"}